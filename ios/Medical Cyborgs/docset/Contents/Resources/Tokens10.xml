<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/HomeScreenVC.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/HomeScreenVC</TokenIdentifier>
			<Abstract type="html">This is the first screen you see when the application starts. It
provides buttons to navigate through device selection, patient
information setup and toggle the monitoring for the application.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
            
			
			<NodeRef refid="10"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HomeScreenVC/setHeartRateButton:</TokenIdentifier>
			<Abstract type="html">The UIButton for going to the viewcontroller that provides selection for the
heart rate device to use.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>@property (retain, nonatomic) IBOutlet UIButton *heartRateButton</Declaration>
			
			
			<Anchor>//api/name/heartRateButton</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HomeScreenVC/heartRateButton</TokenIdentifier>
			<Abstract type="html">The UIButton for going to the viewcontroller that provides selection for the
heart rate device to use.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>@property (retain, nonatomic) IBOutlet UIButton *heartRateButton</Declaration>
			
			
			<Anchor>//api/name/heartRateButton</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HomeScreenVC/heartRateButton</TokenIdentifier>
			<Abstract type="html">The UIButton for going to the viewcontroller that provides selection for the
heart rate device to use.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>@property (retain, nonatomic) IBOutlet UIButton *heartRateButton</Declaration>
			
			
			<Anchor>//api/name/heartRateButton</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HomeScreenVC/setActivityButton:</TokenIdentifier>
			<Abstract type="html">The UIButton for going to the viewcontroller that provides selection for the
activity device to use.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>@property (retain, nonatomic) IBOutlet UIButton *activityButton</Declaration>
			
			
			<Anchor>//api/name/activityButton</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HomeScreenVC/activityButton</TokenIdentifier>
			<Abstract type="html">The UIButton for going to the viewcontroller that provides selection for the
activity device to use.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>@property (retain, nonatomic) IBOutlet UIButton *activityButton</Declaration>
			
			
			<Anchor>//api/name/activityButton</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HomeScreenVC/activityButton</TokenIdentifier>
			<Abstract type="html">The UIButton for going to the viewcontroller that provides selection for the
activity device to use.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>@property (retain, nonatomic) IBOutlet UIButton *activityButton</Declaration>
			
			
			<Anchor>//api/name/activityButton</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HomeScreenVC/setGraphButton:</TokenIdentifier>
			<Abstract type="html">The UIButton for going to the viewcontroller a display of the heart rate and
activity so that verification of the devices operation can be done.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>@property (retain, nonatomic) IBOutlet UIButton *graphButton</Declaration>
			
			
			<Anchor>//api/name/graphButton</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HomeScreenVC/graphButton</TokenIdentifier>
			<Abstract type="html">The UIButton for going to the viewcontroller a display of the heart rate and
activity so that verification of the devices operation can be done.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>@property (retain, nonatomic) IBOutlet UIButton *graphButton</Declaration>
			
			
			<Anchor>//api/name/graphButton</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HomeScreenVC/graphButton</TokenIdentifier>
			<Abstract type="html">The UIButton for going to the viewcontroller a display of the heart rate and
activity so that verification of the devices operation can be done.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>@property (retain, nonatomic) IBOutlet UIButton *graphButton</Declaration>
			
			
			<Anchor>//api/name/graphButton</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HomeScreenVC/setToggleRunButton:</TokenIdentifier>
			<Abstract type="html">The UIButton for toggling the tracking of the patients activity and heart rates
along with location.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>@property (retain, nonatomic) IBOutlet UIButton *toggleRunButton</Declaration>
			
			
			<Anchor>//api/name/toggleRunButton</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HomeScreenVC/toggleRunButton</TokenIdentifier>
			<Abstract type="html">The UIButton for toggling the tracking of the patients activity and heart rates
along with location.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>@property (retain, nonatomic) IBOutlet UIButton *toggleRunButton</Declaration>
			
			
			<Anchor>//api/name/toggleRunButton</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HomeScreenVC/toggleRunButton</TokenIdentifier>
			<Abstract type="html">The UIButton for toggling the tracking of the patients activity and heart rates
along with location.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>@property (retain, nonatomic) IBOutlet UIButton *toggleRunButton</Declaration>
			
			
			<Anchor>//api/name/toggleRunButton</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HomeScreenVC/setPersonalInfoButton:</TokenIdentifier>
			<Abstract type="html">The UIButton for going to the viewcontroller that provides input for the patient
identifcation in the system.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>@property (retain, nonatomic) IBOutlet UIButton *personalInfoButton</Declaration>
			
			
			<Anchor>//api/name/personalInfoButton</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HomeScreenVC/personalInfoButton</TokenIdentifier>
			<Abstract type="html">The UIButton for going to the viewcontroller that provides input for the patient
identifcation in the system.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>@property (retain, nonatomic) IBOutlet UIButton *personalInfoButton</Declaration>
			
			
			<Anchor>//api/name/personalInfoButton</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HomeScreenVC/personalInfoButton</TokenIdentifier>
			<Abstract type="html">The UIButton for going to the viewcontroller that provides input for the patient
identifcation in the system.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>@property (retain, nonatomic) IBOutlet UIButton *personalInfoButton</Declaration>
			
			
			<Anchor>//api/name/personalInfoButton</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HomeScreenVC/setIsMonitoring:</TokenIdentifier>
			<Abstract type="html">A BOOL to verify the state the application is in, whether it is currently monitoring, or
not.  It is used to toggling the color of the run button as well as starting and stopping
the background scheduler tasks.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>@property BOOL isMonitoring</Declaration>
			
			
			<Anchor>//api/name/isMonitoring</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HomeScreenVC/isMonitoring</TokenIdentifier>
			<Abstract type="html">A BOOL to verify the state the application is in, whether it is currently monitoring, or
not.  It is used to toggling the color of the run button as well as starting and stopping
the background scheduler tasks.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>@property BOOL isMonitoring</Declaration>
			
			
			<Anchor>//api/name/isMonitoring</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HomeScreenVC/isMonitoring</TokenIdentifier>
			<Abstract type="html">A BOOL to verify the state the application is in, whether it is currently monitoring, or
not.  It is used to toggling the color of the run button as well as starting and stopping
the background scheduler tasks.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>@property BOOL isMonitoring</Declaration>
			
			
			<Anchor>//api/name/isMonitoring</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HomeScreenVC/setSettings:</TokenIdentifier>
			<Abstract type="html">The view controller for the patient identifcation editing.  A reference is kept for
updates to the buttons so that color changes relate properly to database updates.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>@property PatientInformationVC *settings</Declaration>
			
			
			<Anchor>//api/name/settings</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HomeScreenVC/settings</TokenIdentifier>
			<Abstract type="html">The view controller for the patient identifcation editing.  A reference is kept for
updates to the buttons so that color changes relate properly to database updates.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>@property PatientInformationVC *settings</Declaration>
			
			
			<Anchor>//api/name/settings</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HomeScreenVC/settings</TokenIdentifier>
			<Abstract type="html">The view controller for the patient identifcation editing.  A reference is kept for
updates to the buttons so that color changes relate properly to database updates.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>@property PatientInformationVC *settings</Declaration>
			
			
			<Anchor>//api/name/settings</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HomeScreenVC/setBtDevices:</TokenIdentifier>
			<Abstract type="html">The blue tooth device manager.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>@property (retain) BTDeviceManager *btDevices</Declaration>
			
			
			<Anchor>//api/name/btDevices</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HomeScreenVC/btDevices</TokenIdentifier>
			<Abstract type="html">The blue tooth device manager.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>@property (retain) BTDeviceManager *btDevices</Declaration>
			
			
			<Anchor>//api/name/btDevices</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HomeScreenVC/btDevices</TokenIdentifier>
			<Abstract type="html">The blue tooth device manager.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>@property (retain) BTDeviceManager *btDevices</Declaration>
			
			
			<Anchor>//api/name/btDevices</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HomeScreenVC/setPatientInfo:</TokenIdentifier>
			<Abstract type="html">The object that updates the patient information in local storage for application restarts.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>@property (retain) PersonalInfo *patientInfo</Declaration>
			
			
			<Anchor>//api/name/patientInfo</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HomeScreenVC/patientInfo</TokenIdentifier>
			<Abstract type="html">The object that updates the patient information in local storage for application restarts.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>@property (retain) PersonalInfo *patientInfo</Declaration>
			
			
			<Anchor>//api/name/patientInfo</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HomeScreenVC/patientInfo</TokenIdentifier>
			<Abstract type="html">The object that updates the patient information in local storage for application restarts.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>@property (retain) PersonalInfo *patientInfo</Declaration>
			
			
			<Anchor>//api/name/patientInfo</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HomeScreenVC/setDevicePoller:</TokenIdentifier>
			<Abstract type="html">The polling that gets information from the devices and places it in the database.  This is used
by the GraphVC for observing the heart rate and activity for verification.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>@property (retain) DevicePollManager *devicePoller</Declaration>
			
			
			<Anchor>//api/name/devicePoller</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HomeScreenVC/devicePoller</TokenIdentifier>
			<Abstract type="html">The polling that gets information from the devices and places it in the database.  This is used
by the GraphVC for observing the heart rate and activity for verification.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>@property (retain) DevicePollManager *devicePoller</Declaration>
			
			
			<Anchor>//api/name/devicePoller</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HomeScreenVC/devicePoller</TokenIdentifier>
			<Abstract type="html">The polling that gets information from the devices and places it in the database.  This is used
by the GraphVC for observing the heart rate and activity for verification.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>@property (retain) DevicePollManager *devicePoller</Declaration>
			
			
			<Anchor>//api/name/devicePoller</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HomeScreenVC/setServerPoller:</TokenIdentifier>
			<Abstract type="html">The poller that retrieves data from the local database nad pushes it to the server.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>@property (retain) RemoteDBConnectionManager *serverPoller</Declaration>
			
			
			<Anchor>//api/name/serverPoller</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HomeScreenVC/serverPoller</TokenIdentifier>
			<Abstract type="html">The poller that retrieves data from the local database nad pushes it to the server.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>@property (retain) RemoteDBConnectionManager *serverPoller</Declaration>
			
			
			<Anchor>//api/name/serverPoller</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HomeScreenVC/serverPoller</TokenIdentifier>
			<Abstract type="html">The poller that retrieves data from the local database nad pushes it to the server.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>@property (retain) RemoteDBConnectionManager *serverPoller</Declaration>
			
			
			<Anchor>//api/name/serverPoller</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HomeScreenVC/setScheduler:</TokenIdentifier>
			<Abstract type="html">The background scheduler that is used for monitoring the patient and passing the data
to the local database and eventually to the remote server.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>@property BackgroundScheduler *scheduler</Declaration>
			
			
			<Anchor>//api/name/scheduler</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HomeScreenVC/scheduler</TokenIdentifier>
			<Abstract type="html">The background scheduler that is used for monitoring the patient and passing the data
to the local database and eventually to the remote server.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>@property BackgroundScheduler *scheduler</Declaration>
			
			
			<Anchor>//api/name/scheduler</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HomeScreenVC/scheduler</TokenIdentifier>
			<Abstract type="html">The background scheduler that is used for monitoring the patient and passing the data
to the local database and eventually to the remote server.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>@property BackgroundScheduler *scheduler</Declaration>
			
			
			<Anchor>//api/name/scheduler</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HomeScreenVC/initWithBackgroundScheduler:</TokenIdentifier>
			<Abstract type="html">This is the preferred method of initialization of the object.  The scheduler
has all the necessary information for the homescreen to pass on to the other view controllers
and to allow monitoring control.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>- (id)initWithBackgroundScheduler:(BackgroundScheduler *)scheduler</Declaration>
			<Parameters>
				<Parameter>
					<Name>scheduler</Name>
					<Abstract type="html">The background scheduler that has all the necessary information.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The Home screen of the application with the necessary controllers to perform operation.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithBackgroundScheduler:</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HomeScreenVC/alterPersonalSettings:</TokenIdentifier>
			<Abstract type="html">This method sets up the UIViewController to display the personal settings page.
It is a standard IBAction style of method with the signature of (id) sender
and a void return value noted as IBAction for use in the interface builder.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>- (IBAction)alterPersonalSettings:(id)sender</Declaration>
			<Parameters>
				<Parameter>
					<Name>sender</Name>
					<Abstract type="html">is not used.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/alterPersonalSettings:</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HomeScreenVC/selectActivityMonitor:</TokenIdentifier>
			<Abstract type="html">This method sets up the UIViewController to display the activity monitor selection
page. It is a standard IBAction style of method with the signature of (id) sender
and a void return value noted as IBAction for use in the interface builder.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>- (IBAction)selectActivityMonitor:(id)sender</Declaration>
			<Parameters>
				<Parameter>
					<Name>sender</Name>
					<Abstract type="html">is not used.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/selectActivityMonitor:</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HomeScreenVC/selectHeartMonitor:</TokenIdentifier>
			<Abstract type="html">This method sets up the UIViewController to display the heart monitor selection
page. It is a standard IBAction style of method with the signature of (id) sender
and a void return value noted as IBAction for use in the interface builder.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>- (IBAction)selectHeartMonitor:(id)sender</Declaration>
			<Parameters>
				<Parameter>
					<Name>sender</Name>
					<Abstract type="html">is not used.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/selectHeartMonitor:</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HomeScreenVC/setColorForButton:isReady:</TokenIdentifier>
			<Abstract type="html">This method changes the color of the button based on whether that function
has been configured for use.  If the function is not ready the button will
get a red hue, otherwise it will get a green hue.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>- (void)setColorForButton:(UIButton *)button isReady:(BOOL)ready</Declaration>
			<Parameters>
				<Parameter>
					<Name>button</Name>
					<Abstract type="html">The UIButton that will be modified for the color change.  If none
provided no change takes place.</Abstract>
				</Parameter><Parameter>
					<Name>ready</Name>
					<Abstract type="html">The ready state.  The default is NO.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setColorForButton:isReady:</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HomeScreenVC/showGraph:</TokenIdentifier>
			<Abstract type="html">This method sets up the UIViewController to display the graph page.  This page
will only display if the other devices are connected.  Its purpose is to show
real time collection of data. It is a standard IBAction style of method with the
signature of (id) sender and a void return value noted as IBAction for use in the
interface builder.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>- (IBAction)showGraph:(id)sender</Declaration>
			<Parameters>
				<Parameter>
					<Name>sender</Name>
					<Abstract type="html">is not used.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/showGraph:</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HomeScreenVC/toggleMonitoring:</TokenIdentifier>
			<Abstract type="html">This method starts and stops the actual monitoring process.  It does the setup and
tear down of the backgroun thread that pulls information from the devices at certain
intervals and uploads to the remote database at other intervals. It is a standard
IBAction style of method with the signature of (id) sender and a void return value
noted as IBAction for use in the interface builder.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>- (IBAction)toggleMonitoring:(id)sender</Declaration>
			<Parameters>
				<Parameter>
					<Name>sender</Name>
					<Abstract type="html">is not used.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/toggleMonitoring:</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HomeScreenVC/checkForUpdatedPatientID</TokenIdentifier>
			<Abstract type="html">This method checks to see if the patientID has been updated.  It is used because
of the network delay and the delay for the userdefaults on synchronization.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>- (void)checkForUpdatedPatientID</Declaration>
			
			
			<Anchor>//api/name/checkForUpdatedPatientID</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HomeScreenVC/pollFailed:</TokenIdentifier>
			<Abstract type="html">This method is called when a notification is given by the device poller.  It determines
how the UI is to respond to the event.</Abstract>
			<DeclaredIn>HomeScreenVC.h</DeclaredIn>
			
			<Declaration>- (void)pollFailed:(NSNotification *)notification</Declaration>
			<Parameters>
				<Parameter>
					<Name>notification</Name>
					<Abstract type="html">The notification that is passed to it.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/pollFailed:</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
        
        
	</File>
</Tokens>